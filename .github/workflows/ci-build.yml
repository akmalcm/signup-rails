# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "CI Test Suite"
run-name: 'Test suite'

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  RAILS_ENV: test
  RUBY_VERSION: 3.2.2

jobs:
  changed-files:
    runs-on: ubuntu-latest
    outputs:
      app_changed_files: ${{ steps.changed-files.outputs.app_all_changed_files }}
      rspec_changed_files: ${{ steps.changed-files.outputs.rspec_all_changed_files }}

    steps:
      - uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v37
        with:
          files_yaml: |
            app:
              - '!spec/**'
            rspec:
              - 'spec/**'

  rubocop:
    runs-on: ubuntu-latest
    needs:
      - changed-files
    if: #needs.changed-files.outputs.app_changed_files[0] != null
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Get outputs
        run: |
          echo "app_changed_files: ${{ needs.changed-files.outputs.app_changed_files }}"
          echo "rspec_changed_files: ${{ needs.changed-files.outputs.rspec_changed_files }}"
      - name: Rubocop
        run: |
          echo "Testing 1: ${{ needs.changed-files.outputs.app_changed_files == '' }}"
          echo "Testing 2: ${{ needs.changed-files.outputs.app_changed_files != '' }}"
          echo "Testing 3: ${{ needs.changed-files.outputs.app_changed_files == null }}"
          echo "Testing 4: ${{ needs.changed-files.outputs.app_changed_files != null }}"
          echo "Running rubocop on ${{ needs.changed-files.outputs.app_changed_files }}"
          bundle exec rubocop ${{ needs.changed-files.outputs.app_changed_files }} --parallel --force-exclusion
  test:
    timeout-minutes: 1
    runs-on: ubuntu-latest
    needs:
      - rubocop

    env:
      DB_HOST: localhost
      DB_USERNAME: postgres
      DB_PASSWORD: postgres

    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: ${{ env.DB_PASSWORD }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Set up database schema
        run:
          bundle exec rake db:create db:schema:load
      # Add or replace test runners here
      - name: Run tests
        run: bundle exec rspec
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Install Ruby and gems
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: ${{ env.RUBY_VERSION }}
  #         bundler-cache: true
  #     # Add or replace any other lints here
  #     - name: Security audit dependencies
  #       run: bin/bundler-audit --update
  #     - name: Security audit application code
  #       run: bin/brakeman -q -w2
